# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/benchmark.ipynb.

# %% auto 0
__all__ = ['forecast_error', 'percent_forecast_error']

# %% ../nbs/benchmark.ipynb 2
from tsai.basics import *
import matplotlib.dates as mdates

# %% ../nbs/benchmark.ipynb 3
def forecast_error(y_true, y_pred, h):
    # The forecast error is defined as the difference  between the forecasted value 
    # and the actual value. It is also dependant on the time, i.e., on the horizon 
    # of the forecast (h).
    # NOTE: This function computes the error for just one variable, not for all of them
    # Inputs:
    # y_true: actual values (samples x steps)
    # y_pred: predicted values (samples x steps)
    # h: horizon of the forecast (1..horizon)
    return (y_pred[:, h-1] - y_true[:, h-1])

def percent_forecast_error(y_true, y_pred, h, epsilon=1e-8):
    # forecast error normalized by the actual value
    # Inputs:
    # y_true: actual values (samples x steps)
    # y_pred: predicted values (samples x steps)
    # h: horizon of the forecast (1..horizon)
    return 100*(forecast_error(y_true, y_pred, h)) / (y_true[:, h-1] + epsilon)
