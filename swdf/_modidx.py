# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/sw-driver-forecaster',
                'doc_host': 'https://arclab.github.io',
                'git_url': 'https://github.com/arclab/sw-driver-forecaster',
                'lib_path': 'swdf'},
  'syms': { 'swdf.benchmark': { 'swdf.benchmark.forecast_error': ('benchmark.html#forecast_error', 'swdf/benchmark.py'),
                                'swdf.benchmark.percent_forecast_error': ('benchmark.html#percent_forecast_error', 'swdf/benchmark.py')},
            'swdf.losses': { 'swdf.losses.Loss': ('losses.html#loss', 'swdf/losses.py'),
                             'swdf.losses.Loss.__init__': ('losses.html#loss.__init__', 'swdf/losses.py'),
                             'swdf.losses.Loss.forward': ('losses.html#loss.forward', 'swdf/losses.py'),
                             'swdf.losses.Loss.loss_call': ('losses.html#loss.loss_call', 'swdf/losses.py'),
                             'swdf.losses.Loss.loss_measure': ('losses.html#loss.loss_measure', 'swdf/losses.py'),
                             'swdf.losses.Loss.metrics': ('losses.html#loss.metrics', 'swdf/losses.py'),
                             'swdf.losses.Loss.weighted_loss_tensor': ('losses.html#loss.weighted_loss_tensor', 'swdf/losses.py'),
                             'swdf.losses.wMAELoss': ('losses.html#wmaeloss', 'swdf/losses.py'),
                             'swdf.losses.wMAELoss.__init__': ('losses.html#wmaeloss.__init__', 'swdf/losses.py'),
                             'swdf.losses.wMAELoss.loss_measure': ('losses.html#wmaeloss.loss_measure', 'swdf/losses.py'),
                             'swdf.losses.wMSELoss': ('losses.html#wmseloss', 'swdf/losses.py'),
                             'swdf.losses.wMSELoss.__init__': ('losses.html#wmseloss.__init__', 'swdf/losses.py'),
                             'swdf.losses.wMSELoss.loss_measure': ('losses.html#wmseloss.loss_measure', 'swdf/losses.py')},
            'swdf.utils': { 'swdf.utils.bold_best': ('utils.html#bold_best', 'swdf/utils.py'),
                            'swdf.utils.clean_f10_values': ('utils.html#clean_f10_values', 'swdf/utils.py'),
                            'swdf.utils.convert_uuids_to_indices': ('utils.html#convert_uuids_to_indices', 'swdf/utils.py'),
                            'swdf.utils.euclidean_distance_dict': ('utils.html#euclidean_distance_dict', 'swdf/utils.py'),
                            'swdf.utils.find_closest_distribution': ('utils.html#find_closest_distribution', 'swdf/utils.py'),
                            'swdf.utils.get_F10_historical_distribution': ('utils.html#get_f10_historical_distribution', 'swdf/utils.py'),
                            'swdf.utils.get_classified_columns': ('utils.html#get_classified_columns', 'swdf/utils.py'),
                            'swdf.utils.plot_forecast_2': ('utils.html#plot_forecast_2', 'swdf/utils.py'),
                            'swdf.utils.plot_solar_algorithm_performance': ( 'utils.html#plot_solar_algorithm_performance',
                                                                             'swdf/utils.py')}}}
