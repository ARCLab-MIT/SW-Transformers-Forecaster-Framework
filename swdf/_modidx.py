# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/sw-driver-forecaster',
                'doc_host': 'https://arclab.github.io',
                'git_url': 'https://github.com/arclab/sw-driver-forecaster',
                'lib_path': 'swdf'},
  'syms': { 'swdf.benchmark': { 'swdf.benchmark.forecast_error': ('benchmark.html#forecast_error', 'swdf/benchmark.py'),
                                'swdf.benchmark.percent_forecast_error': ('benchmark.html#percent_forecast_error', 'swdf/benchmark.py')},
            'swdf.losses': { 'swdf.losses.ClassificationLoss': ('losses.html#classificationloss', 'swdf/losses.py'),
                             'swdf.losses.ClassificationLoss.__init__': ('losses.html#classificationloss.__init__', 'swdf/losses.py'),
                             'swdf.losses.ClassificationLoss.forward': ('losses.html#classificationloss.forward', 'swdf/losses.py'),
                             'swdf.losses.ClassificationLoss.loss_measure': ( 'losses.html#classificationloss.loss_measure',
                                                                              'swdf/losses.py'),
                             'swdf.losses.HubberLoss': ('losses.html#hubberloss', 'swdf/losses.py'),
                             'swdf.losses.HubberLoss.__init__': ('losses.html#hubberloss.__init__', 'swdf/losses.py'),
                             'swdf.losses.HubberLoss._compute_loss': ('losses.html#hubberloss._compute_loss', 'swdf/losses.py'),
                             'swdf.losses.Loss': ('losses.html#loss', 'swdf/losses.py'),
                             'swdf.losses.Loss.__init__': ('losses.html#loss.__init__', 'swdf/losses.py'),
                             'swdf.losses.Loss._compute_loss': ('losses.html#loss._compute_loss', 'swdf/losses.py'),
                             'swdf.losses.Loss._reduce': ('losses.html#loss._reduce', 'swdf/losses.py'),
                             'swdf.losses.Loss.forward': ('losses.html#loss.forward', 'swdf/losses.py'),
                             'swdf.losses.MAELoss': ('losses.html#maeloss', 'swdf/losses.py'),
                             'swdf.losses.MAELoss.__init__': ('losses.html#maeloss.__init__', 'swdf/losses.py'),
                             'swdf.losses.MAELoss._compute_loss': ('losses.html#maeloss._compute_loss', 'swdf/losses.py'),
                             'swdf.losses.MSELoss': ('losses.html#mseloss', 'swdf/losses.py'),
                             'swdf.losses.MSELoss.__init__': ('losses.html#mseloss.__init__', 'swdf/losses.py'),
                             'swdf.losses.MSELoss._compute_loss': ('losses.html#mseloss._compute_loss', 'swdf/losses.py'),
                             'swdf.losses.MSLELoss': ('losses.html#msleloss', 'swdf/losses.py'),
                             'swdf.losses.MSLELoss.__init__': ('losses.html#msleloss.__init__', 'swdf/losses.py'),
                             'swdf.losses.MSLELoss._compute_loss': ('losses.html#msleloss._compute_loss', 'swdf/losses.py'),
                             'swdf.losses.MSLELoss.inverse_scale_values_below_threshold': ( 'losses.html#msleloss.inverse_scale_values_below_threshold',
                                                                                            'swdf/losses.py'),
                             'swdf.losses.QuantileLoss': ('losses.html#quantileloss', 'swdf/losses.py'),
                             'swdf.losses.QuantileLoss.__init__': ('losses.html#quantileloss.__init__', 'swdf/losses.py'),
                             'swdf.losses.QuantileLoss._compute_loss': ('losses.html#quantileloss._compute_loss', 'swdf/losses.py'),
                             'swdf.losses.RMSLELoss': ('losses.html#rmsleloss', 'swdf/losses.py'),
                             'swdf.losses.RMSLELoss.__init__': ('losses.html#rmsleloss.__init__', 'swdf/losses.py'),
                             'swdf.losses.RMSLELoss.forward': ('losses.html#rmsleloss.forward', 'swdf/losses.py'),
                             'swdf.losses.TrendedLoss': ('losses.html#trendedloss', 'swdf/losses.py'),
                             'swdf.losses.TrendedLoss.__init__': ('losses.html#trendedloss.__init__', 'swdf/losses.py'),
                             'swdf.losses.TrendedLoss._calculate_trends': ('losses.html#trendedloss._calculate_trends', 'swdf/losses.py'),
                             'swdf.losses.TrendedLoss._slope': ('losses.html#trendedloss._slope', 'swdf/losses.py'),
                             'swdf.losses.TrendedLoss.forward': ('losses.html#trendedloss.forward', 'swdf/losses.py'),
                             'swdf.losses.WeightedLoss': ('losses.html#weightedloss', 'swdf/losses.py'),
                             'swdf.losses.WeightedLoss.__init__': ('losses.html#weightedloss.__init__', 'swdf/losses.py'),
                             'swdf.losses.WeightedLoss._preprocess_data': ('losses.html#weightedloss._preprocess_data', 'swdf/losses.py'),
                             'swdf.losses.WeightedLoss.forward': ('losses.html#weightedloss.forward', 'swdf/losses.py'),
                             'swdf.losses.WeightedLoss.loss_measure': ('losses.html#weightedloss.loss_measure', 'swdf/losses.py'),
                             'swdf.losses.WeightedLoss.weighted_loss_tensor': ( 'losses.html#weightedloss.weighted_loss_tensor',
                                                                                'swdf/losses.py'),
                             'swdf.losses.wHubberLoss': ('losses.html#whubberloss', 'swdf/losses.py'),
                             'swdf.losses.wHubberLoss.__init__': ('losses.html#whubberloss.__init__', 'swdf/losses.py'),
                             'swdf.losses.wHubberLoss.loss_measure': ('losses.html#whubberloss.loss_measure', 'swdf/losses.py'),
                             'swdf.losses.wMAELoss': ('losses.html#wmaeloss', 'swdf/losses.py'),
                             'swdf.losses.wMAELoss.__init__': ('losses.html#wmaeloss.__init__', 'swdf/losses.py'),
                             'swdf.losses.wMAELoss.loss_measure': ('losses.html#wmaeloss.loss_measure', 'swdf/losses.py'),
                             'swdf.losses.wMSELoss': ('losses.html#wmseloss', 'swdf/losses.py'),
                             'swdf.losses.wMSELoss.__init__': ('losses.html#wmseloss.__init__', 'swdf/losses.py'),
                             'swdf.losses.wMSELoss.loss_measure': ('losses.html#wmseloss.loss_measure', 'swdf/losses.py'),
                             'swdf.losses.wMSLELoss': ('losses.html#wmsleloss', 'swdf/losses.py'),
                             'swdf.losses.wMSLELoss.__init__': ('losses.html#wmsleloss.__init__', 'swdf/losses.py'),
                             'swdf.losses.wMSLELoss.loss_measure': ('losses.html#wmsleloss.loss_measure', 'swdf/losses.py'),
                             'swdf.losses.wQuantileLoss': ('losses.html#wquantileloss', 'swdf/losses.py'),
                             'swdf.losses.wQuantileLoss.__init__': ('losses.html#wquantileloss.__init__', 'swdf/losses.py'),
                             'swdf.losses.wQuantileLoss.loss_measure': ('losses.html#wquantileloss.loss_measure', 'swdf/losses.py'),
                             'swdf.losses.wRMSLELoss': ('losses.html#wrmsleloss', 'swdf/losses.py'),
                             'swdf.losses.wRMSLELoss.__init__': ('losses.html#wrmsleloss.__init__', 'swdf/losses.py'),
                             'swdf.losses.wRMSLELoss.forward': ('losses.html#wrmsleloss.forward', 'swdf/losses.py')},
            'swdf.metrics': { 'swdf.metrics.AUPRCMetric': ('metrics.html#auprcmetric', 'swdf/metrics.py'),
                              'swdf.metrics.AUPRCMetric.AURPC': ('metrics.html#auprcmetric.aurpc', 'swdf/metrics.py'),
                              'swdf.metrics.AUPRCMetric.__init__': ('metrics.html#auprcmetric.__init__', 'swdf/metrics.py'),
                              'swdf.metrics.AUPRCMetric.get_metrics': ('metrics.html#auprcmetric.get_metrics', 'swdf/metrics.py'),
                              'swdf.metrics.AccuracyMetrics': ('metrics.html#accuracymetrics', 'swdf/metrics.py'),
                              'swdf.metrics.AccuracyMetrics.MSA': ('metrics.html#accuracymetrics.msa', 'swdf/metrics.py'),
                              'swdf.metrics.AccuracyMetrics.__init__': ('metrics.html#accuracymetrics.__init__', 'swdf/metrics.py'),
                              'swdf.metrics.AccuracyMetrics.get_metrics': ('metrics.html#accuracymetrics.get_metrics', 'swdf/metrics.py'),
                              'swdf.metrics.AccuracyMetrics.sMAPE': ('metrics.html#accuracymetrics.smape', 'swdf/metrics.py'),
                              'swdf.metrics.AssociationMetrics': ('metrics.html#associationmetrics', 'swdf/metrics.py'),
                              'swdf.metrics.AssociationMetrics.R2_Score': ('metrics.html#associationmetrics.r2_score', 'swdf/metrics.py'),
                              'swdf.metrics.AssociationMetrics.R_Correlation': ( 'metrics.html#associationmetrics.r_correlation',
                                                                                 'swdf/metrics.py'),
                              'swdf.metrics.AssociationMetrics.__init__': ('metrics.html#associationmetrics.__init__', 'swdf/metrics.py'),
                              'swdf.metrics.AssociationMetrics.get_metrics': ( 'metrics.html#associationmetrics.get_metrics',
                                                                               'swdf/metrics.py'),
                              'swdf.metrics.BiasMetrics': ('metrics.html#biasmetrics', 'swdf/metrics.py'),
                              'swdf.metrics.BiasMetrics.SSPB': ('metrics.html#biasmetrics.sspb', 'swdf/metrics.py'),
                              'swdf.metrics.BiasMetrics.__init__': ('metrics.html#biasmetrics.__init__', 'swdf/metrics.py'),
                              'swdf.metrics.BiasMetrics.get_metrics': ('metrics.html#biasmetrics.get_metrics', 'swdf/metrics.py'),
                              'swdf.metrics.ClassificationMetrics': ('metrics.html#classificationmetrics', 'swdf/metrics.py'),
                              'swdf.metrics.ClassificationMetrics.__init__': ( 'metrics.html#classificationmetrics.__init__',
                                                                               'swdf/metrics.py'),
                              'swdf.metrics.ClassificationMetrics._compute_misclassifications': ( 'metrics.html#classificationmetrics._compute_misclassifications',
                                                                                                  'swdf/metrics.py'),
                              'swdf.metrics.ClassificationMetrics._count_misclassifications_by_position': ( 'metrics.html#classificationmetrics._count_misclassifications_by_position',
                                                                                                            'swdf/metrics.py'),
                              'swdf.metrics.ClassificationMetrics.get_metrics': ( 'metrics.html#classificationmetrics.get_metrics',
                                                                                  'swdf/metrics.py'),
                              'swdf.metrics.F1ScoreMetrics': ('metrics.html#f1scoremetrics', 'swdf/metrics.py'),
                              'swdf.metrics.F1ScoreMetrics.Accuracy_Score': ( 'metrics.html#f1scoremetrics.accuracy_score',
                                                                              'swdf/metrics.py'),
                              'swdf.metrics.F1ScoreMetrics.F1_Score': ('metrics.html#f1scoremetrics.f1_score', 'swdf/metrics.py'),
                              'swdf.metrics.F1ScoreMetrics.Negative_Predictive_Value': ( 'metrics.html#f1scoremetrics.negative_predictive_value',
                                                                                         'swdf/metrics.py'),
                              'swdf.metrics.F1ScoreMetrics.Precision': ('metrics.html#f1scoremetrics.precision', 'swdf/metrics.py'),
                              'swdf.metrics.F1ScoreMetrics.Recall': ('metrics.html#f1scoremetrics.recall', 'swdf/metrics.py'),
                              'swdf.metrics.F1ScoreMetrics.Specificity': ('metrics.html#f1scoremetrics.specificity', 'swdf/metrics.py'),
                              'swdf.metrics.F1ScoreMetrics.__init__': ('metrics.html#f1scoremetrics.__init__', 'swdf/metrics.py'),
                              'swdf.metrics.F1ScoreMetrics.get_metrics': ('metrics.html#f1scoremetrics.get_metrics', 'swdf/metrics.py'),
                              'swdf.metrics.F1ScoreMetrics.Δ_Detected_Outliers': ( 'metrics.html#f1scoremetrics.δ_detected_outliers',
                                                                                   'swdf/metrics.py'),
                              'swdf.metrics.GEODSTAPClassificationMetrics': ( 'metrics.html#geodstapclassificationmetrics',
                                                                              'swdf/metrics.py'),
                              'swdf.metrics.GEODSTAPClassificationMetrics.Missclassifications_Active': ( 'metrics.html#geodstapclassificationmetrics.missclassifications_active',
                                                                                                         'swdf/metrics.py'),
                              'swdf.metrics.GEODSTAPClassificationMetrics.Missclassifications_G0': ( 'metrics.html#geodstapclassificationmetrics.missclassifications_g0',
                                                                                                     'swdf/metrics.py'),
                              'swdf.metrics.GEODSTAPClassificationMetrics.Missclassifications_G1': ( 'metrics.html#geodstapclassificationmetrics.missclassifications_g1',
                                                                                                     'swdf/metrics.py'),
                              'swdf.metrics.GEODSTAPClassificationMetrics.Missclassifications_G2': ( 'metrics.html#geodstapclassificationmetrics.missclassifications_g2',
                                                                                                     'swdf/metrics.py'),
                              'swdf.metrics.GEODSTAPClassificationMetrics.Missclassifications_G3': ( 'metrics.html#geodstapclassificationmetrics.missclassifications_g3',
                                                                                                     'swdf/metrics.py'),
                              'swdf.metrics.GEODSTAPClassificationMetrics.Missclassifications_G4': ( 'metrics.html#geodstapclassificationmetrics.missclassifications_g4',
                                                                                                     'swdf/metrics.py'),
                              'swdf.metrics.GEODSTAPClassificationMetrics.Missclassifications_G5': ( 'metrics.html#geodstapclassificationmetrics.missclassifications_g5',
                                                                                                     'swdf/metrics.py'),
                              'swdf.metrics.GEODSTAPClassificationMetrics.Missclassifications_Low': ( 'metrics.html#geodstapclassificationmetrics.missclassifications_low',
                                                                                                      'swdf/metrics.py'),
                              'swdf.metrics.GEODSTAPClassificationMetrics.Missclassifications_Medium': ( 'metrics.html#geodstapclassificationmetrics.missclassifications_medium',
                                                                                                         'swdf/metrics.py'),
                              'swdf.metrics.GEODSTAPClassificationMetrics.__init__': ( 'metrics.html#geodstapclassificationmetrics.__init__',
                                                                                       'swdf/metrics.py'),
                              'swdf.metrics.GEODSTAPClassificationMetrics.get_metrics': ( 'metrics.html#geodstapclassificationmetrics.get_metrics',
                                                                                          'swdf/metrics.py'),
                              'swdf.metrics.GEODSTAPMetrics': ('metrics.html#geodstapmetrics', 'swdf/metrics.py'),
                              'swdf.metrics.GEODSTAPMetrics.Loss_Active': ('metrics.html#geodstapmetrics.loss_active', 'swdf/metrics.py'),
                              'swdf.metrics.GEODSTAPMetrics.Loss_G0': ('metrics.html#geodstapmetrics.loss_g0', 'swdf/metrics.py'),
                              'swdf.metrics.GEODSTAPMetrics.Loss_G1': ('metrics.html#geodstapmetrics.loss_g1', 'swdf/metrics.py'),
                              'swdf.metrics.GEODSTAPMetrics.Loss_G2': ('metrics.html#geodstapmetrics.loss_g2', 'swdf/metrics.py'),
                              'swdf.metrics.GEODSTAPMetrics.Loss_G3': ('metrics.html#geodstapmetrics.loss_g3', 'swdf/metrics.py'),
                              'swdf.metrics.GEODSTAPMetrics.Loss_G4': ('metrics.html#geodstapmetrics.loss_g4', 'swdf/metrics.py'),
                              'swdf.metrics.GEODSTAPMetrics.Loss_G5': ('metrics.html#geodstapmetrics.loss_g5', 'swdf/metrics.py'),
                              'swdf.metrics.GEODSTAPMetrics.Loss_Low': ('metrics.html#geodstapmetrics.loss_low', 'swdf/metrics.py'),
                              'swdf.metrics.GEODSTAPMetrics.Loss_Medium': ('metrics.html#geodstapmetrics.loss_medium', 'swdf/metrics.py'),
                              'swdf.metrics.GEODSTAPMetrics.__init__': ('metrics.html#geodstapmetrics.__init__', 'swdf/metrics.py'),
                              'swdf.metrics.GEODSTAPMetrics.get_metrics': ('metrics.html#geodstapmetrics.get_metrics', 'swdf/metrics.py'),
                              'swdf.metrics.KSDifferenceMetric': ('metrics.html#ksdifferencemetric', 'swdf/metrics.py'),
                              'swdf.metrics.KSDifferenceMetric.__init__': ('metrics.html#ksdifferencemetric.__init__', 'swdf/metrics.py'),
                              'swdf.metrics.KSDifferenceMetric.get_metrics': ( 'metrics.html#ksdifferencemetric.get_metrics',
                                                                               'swdf/metrics.py'),
                              'swdf.metrics.KSDifferenceMetric.kurtosis': ('metrics.html#ksdifferencemetric.kurtosis', 'swdf/metrics.py'),
                              'swdf.metrics.KSDifferenceMetric.skewness': ('metrics.html#ksdifferencemetric.skewness', 'swdf/metrics.py'),
                              'swdf.metrics.KSDifferenceMetric.Δ_Kurtosis': ( 'metrics.html#ksdifferencemetric.δ_kurtosis',
                                                                              'swdf/metrics.py'),
                              'swdf.metrics.KSDifferenceMetric.Δ_Skewness': ( 'metrics.html#ksdifferencemetric.δ_skewness',
                                                                              'swdf/metrics.py'),
                              'swdf.metrics.LossMetrics': ('metrics.html#lossmetrics', 'swdf/metrics.py'),
                              'swdf.metrics.LossMetrics.Metrics_Not_Available': ( 'metrics.html#lossmetrics.metrics_not_available',
                                                                                  'swdf/metrics.py'),
                              'swdf.metrics.LossMetrics.__init__': ('metrics.html#lossmetrics.__init__', 'swdf/metrics.py'),
                              'swdf.metrics.LossMetrics.get_metrics': ('metrics.html#lossmetrics.get_metrics', 'swdf/metrics.py'),
                              'swdf.metrics.Metrics': ('metrics.html#metrics', 'swdf/metrics.py'),
                              'swdf.metrics.Metrics.__init__': ('metrics.html#metrics.__init__', 'swdf/metrics.py'),
                              'swdf.metrics.Metrics.get_metrics': ('metrics.html#metrics.get_metrics', 'swdf/metrics.py'),
                              'swdf.metrics.OutlierDetectionMetrics': ('metrics.html#outlierdetectionmetrics', 'swdf/metrics.py'),
                              'swdf.metrics.OutlierDetectionMetrics.__init__': ( 'metrics.html#outlierdetectionmetrics.__init__',
                                                                                 'swdf/metrics.py'),
                              'swdf.metrics.OutlierDetectionMetrics._detect_outliers': ( 'metrics.html#outlierdetectionmetrics._detect_outliers',
                                                                                         'swdf/metrics.py'),
                              'swdf.metrics.OutlierDetectionMetrics._evaluate_outlier_predicted': ( 'metrics.html#outlierdetectionmetrics._evaluate_outlier_predicted',
                                                                                                    'swdf/metrics.py'),
                              'swdf.metrics.OutlierDetectionMetrics._modified_z_score': ( 'metrics.html#outlierdetectionmetrics._modified_z_score',
                                                                                          'swdf/metrics.py'),
                              'swdf.metrics.OutlierDetectionMetrics.get_metrics': ( 'metrics.html#outlierdetectionmetrics.get_metrics',
                                                                                    'swdf/metrics.py'),
                              'swdf.metrics.RegressiveMetrics': ('metrics.html#regressivemetrics', 'swdf/metrics.py'),
                              'swdf.metrics.RegressiveMetrics.__init__': ('metrics.html#regressivemetrics.__init__', 'swdf/metrics.py'),
                              'swdf.metrics.RegressiveMetrics._apply_weighted_loss_by_level': ( 'metrics.html#regressivemetrics._apply_weighted_loss_by_level',
                                                                                                'swdf/metrics.py'),
                              'swdf.metrics.RegressiveMetrics.get_metrics': ( 'metrics.html#regressivemetrics.get_metrics',
                                                                              'swdf/metrics.py'),
                              'swdf.metrics.SOLFMYClassificationMetrics': ('metrics.html#solfmyclassificationmetrics', 'swdf/metrics.py'),
                              'swdf.metrics.SOLFMYClassificationMetrics.Missclassifications_Elevated': ( 'metrics.html#solfmyclassificationmetrics.missclassifications_elevated',
                                                                                                         'swdf/metrics.py'),
                              'swdf.metrics.SOLFMYClassificationMetrics.Missclassifications_High': ( 'metrics.html#solfmyclassificationmetrics.missclassifications_high',
                                                                                                     'swdf/metrics.py'),
                              'swdf.metrics.SOLFMYClassificationMetrics.Missclassifications_Low': ( 'metrics.html#solfmyclassificationmetrics.missclassifications_low',
                                                                                                    'swdf/metrics.py'),
                              'swdf.metrics.SOLFMYClassificationMetrics.Missclassifications_Moderate': ( 'metrics.html#solfmyclassificationmetrics.missclassifications_moderate',
                                                                                                         'swdf/metrics.py'),
                              'swdf.metrics.SOLFMYClassificationMetrics.__init__': ( 'metrics.html#solfmyclassificationmetrics.__init__',
                                                                                     'swdf/metrics.py'),
                              'swdf.metrics.SOLFMYClassificationMetrics.get_metrics': ( 'metrics.html#solfmyclassificationmetrics.get_metrics',
                                                                                        'swdf/metrics.py'),
                              'swdf.metrics.SOLFMYMetrics': ('metrics.html#solfmymetrics', 'swdf/metrics.py'),
                              'swdf.metrics.SOLFMYMetrics.Loss_Elevated': ('metrics.html#solfmymetrics.loss_elevated', 'swdf/metrics.py'),
                              'swdf.metrics.SOLFMYMetrics.Loss_High': ('metrics.html#solfmymetrics.loss_high', 'swdf/metrics.py'),
                              'swdf.metrics.SOLFMYMetrics.Loss_Low': ('metrics.html#solfmymetrics.loss_low', 'swdf/metrics.py'),
                              'swdf.metrics.SOLFMYMetrics.Loss_Moderate': ('metrics.html#solfmymetrics.loss_moderate', 'swdf/metrics.py'),
                              'swdf.metrics.SOLFMYMetrics.__init__': ('metrics.html#solfmymetrics.__init__', 'swdf/metrics.py'),
                              'swdf.metrics.SOLFMYMetrics.get_metrics': ('metrics.html#solfmymetrics.get_metrics', 'swdf/metrics.py')},
            'swdf.models': { 'swdf.models.PersistenceModel': ('models.html#persistencemodel', 'swdf/models.py'),
                             'swdf.models.PersistenceModel.__init__': ('models.html#persistencemodel.__init__', 'swdf/models.py'),
                             'swdf.models.PersistenceModel.forward': ('models.html#persistencemodel.forward', 'swdf/models.py'),
                             'swdf.models.PersistenceModel.step': ('models.html#persistencemodel.step', 'swdf/models.py'),
                             'swdf.models.PersistenceModel.zero_grad': ('models.html#persistencemodel.zero_grad', 'swdf/models.py')},
            'swdf.preprocessing': { 'swdf.preprocessing.BackForwardFillMissing': ( 'preprocessing.html#backforwardfillmissing',
                                                                                   'swdf/preprocessing.py'),
                                    'swdf.preprocessing.BackForwardFillMissing.__init__': ( 'preprocessing.html#backforwardfillmissing.__init__',
                                                                                            'swdf/preprocessing.py'),
                                    'swdf.preprocessing.BackForwardFillMissing.fit': ( 'preprocessing.html#backforwardfillmissing.fit',
                                                                                       'swdf/preprocessing.py'),
                                    'swdf.preprocessing.BackForwardFillMissing.transform': ( 'preprocessing.html#backforwardfillmissing.transform',
                                                                                             'swdf/preprocessing.py'),
                                    'swdf.preprocessing.PolyImputer': ('preprocessing.html#polyimputer', 'swdf/preprocessing.py'),
                                    'swdf.preprocessing.PolyImputer.__init__': ( 'preprocessing.html#polyimputer.__init__',
                                                                                 'swdf/preprocessing.py'),
                                    'swdf.preprocessing.PolyImputer._find_best_polynomial': ( 'preprocessing.html#polyimputer._find_best_polynomial',
                                                                                              'swdf/preprocessing.py'),
                                    'swdf.preprocessing.PolyImputer._plot_polynomial_fit': ( 'preprocessing.html#polyimputer._plot_polynomial_fit',
                                                                                             'swdf/preprocessing.py'),
                                    'swdf.preprocessing.PolyImputer.fit': ('preprocessing.html#polyimputer.fit', 'swdf/preprocessing.py'),
                                    'swdf.preprocessing.PolyImputer.transform': ( 'preprocessing.html#polyimputer.transform',
                                                                                  'swdf/preprocessing.py')},
            'swdf.utils': { 'swdf.utils._highlight_better_values': ('utils.html#_highlight_better_values', 'swdf/utils.py'),
                            'swdf.utils.bold_best': ('utils.html#bold_best', 'swdf/utils.py'),
                            'swdf.utils.convert_uuids_to_indices': ('utils.html#convert_uuids_to_indices', 'swdf/utils.py'),
                            'swdf.utils.create_latex_comparison_tables': ('utils.html#create_latex_comparison_tables', 'swdf/utils.py'),
                            'swdf.utils.download_dst_data': ('utils.html#download_dst_data', 'swdf/utils.py'),
                            'swdf.utils.euclidean_distance_dict': ('utils.html#euclidean_distance_dict', 'swdf/utils.py'),
                            'swdf.utils.find_closest_distribution': ('utils.html#find_closest_distribution', 'swdf/utils.py'),
                            'swdf.utils.generate_preprocessed_data': ('utils.html#generate_preprocessed_data', 'swdf/utils.py'),
                            'swdf.utils.get_classified_columns': ('utils.html#get_classified_columns', 'swdf/utils.py'),
                            'swdf.utils.plot_forecast_2': ('utils.html#plot_forecast_2', 'swdf/utils.py'),
                            'swdf.utils.plot_solar_algorithm_performance': ('utils.html#plot_solar_algorithm_performance', 'swdf/utils.py'),
                            'swdf.utils.plot_solar_algorithm_performance_comparison': ( 'utils.html#plot_solar_algorithm_performance_comparison',
                                                                                        'swdf/utils.py'),
                            'swdf.utils.sliding_window_generator': ('utils.html#sliding_window_generator', 'swdf/utils.py')}}}
